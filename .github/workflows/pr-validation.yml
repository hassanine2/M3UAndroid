name: Pull Request Validation

on:
  pull_request:
    branches: [ "master" ]
    types: [opened, synchronize, reopened, ready_for_review]

concurrency:
  group: pr-${{ github.event.pull_request.number }}
  cancel-in-progress: true

env:
  GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx4g -Dorg.gradle.daemon=false"

jobs:
  # Quick validation for PRs
  pr-checks:
    name: 🔍 PR Quality Checks
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    timeout-minutes: 20
    
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: "zulu"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-home-cache-cleanup: true
          cache-read-only: true

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v3

      - name: Run Quick Lint
        run: ./gradlew lint -x lintVitalRelease --continue

      - name: Check Code Formatting
        run: ./gradlew spotlessCheck || echo "Code formatting issues found"

      - name: Compile All Modules
        run: ./gradlew compileDebugKotlin --continue

      - name: Build Debug APKs
        run: |
          ./gradlew :app:smartphone:assembleDebug
          ./gradlew :app:tv:assembleDebug

      - name: Comment PR
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const conclusion = '${{ job.status }}' === 'success' ? '✅ All checks passed!' : '❌ Some checks failed';
            const body = `## PR Validation Results

            ${conclusion}

            ### Completed Checks:
            - ✅ Gradle wrapper validation
            - ✅ Code compilation
            - ✅ Basic lint checks
            - ✅ Debug APK build

            For full validation, this PR will be tested when merged to master.
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

  # Analyze changed files
  changed-files:
    name: 📝 Analyze Changes
    runs-on: ubuntu-latest
    
    outputs:
      has-kotlin-changes: ${{ steps.changes.outputs.kotlin }}
      has-gradle-changes: ${{ steps.changes.outputs.gradle }}
      has-workflow-changes: ${{ steps.changes.outputs.workflows }}
      
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect Changes
        id: changes
        run: |
          # Check for Kotlin changes
          if git diff --name-only origin/master...HEAD | grep -E '\.(kt|kts)$'; then
            echo "kotlin=true" >> $GITHUB_OUTPUT
          else
            echo "kotlin=false" >> $GITHUB_OUTPUT
          fi
          
          # Check for Gradle changes
          if git diff --name-only origin/master...HEAD | grep -E '\.(gradle|toml)$|gradle'; then
            echo "gradle=true" >> $GITHUB_OUTPUT
          else
            echo "gradle=false" >> $GITHUB_OUTPUT
          fi
          
          # Check for workflow changes
          if git diff --name-only origin/master...HEAD | grep -E '\.github/workflows/'; then
            echo "workflows=true" >> $GITHUB_OUTPUT
          else
            echo "workflows=false" >> $GITHUB_OUTPUT
          fi

      - name: PR Summary
        run: |
          echo "## 📊 Change Analysis" >> $GITHUB_STEP_SUMMARY
          echo "- Kotlin Changes: ${{ steps.changes.outputs.kotlin }}" >> $GITHUB_STEP_SUMMARY
          echo "- Gradle Changes: ${{ steps.changes.outputs.gradle }}" >> $GITHUB_STEP_SUMMARY
          echo "- Workflow Changes: ${{ steps.changes.outputs.workflows }}" >> $GITHUB_STEP_SUMMARY